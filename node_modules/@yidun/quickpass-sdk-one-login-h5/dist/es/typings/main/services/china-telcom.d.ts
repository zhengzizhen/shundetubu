import type { PreCheckData } from '@Src/main/types';
import NEOneLogin from '../one-login';
interface Params {
    callback?: string;
    clientId?: string;
    clientType?: string;
    finger?: string;
    format?: string;
    seqNum?: string;
    timeStamp?: string;
    version?: string;
    bussinessType?: string;
    sign?: string;
}
declare class ChinaTelcom {
    callbackName?: string;
    private readonly oneLogin;
    constructor(oneLogin: NEOneLogin);
    getToken(data: PreCheckData): Promise<"" | {
        tn: string;
        clientId: string;
        maskPhone: string;
    }>;
    getPreUrl(data: Params): Promise<{
        preUrl: string;
        params: {};
    } | {
        preUrl: string;
        params: {
            clientId: string | undefined;
            clientType: string | undefined;
            finger: string | undefined;
            format: string | undefined;
            seqNum: string | undefined;
            timeStamp: string | undefined;
            version: string | undefined;
            bussinessType: string | undefined;
            sign: string | undefined;
        };
    }>;
    pingPreUrl(url: string, data: Params): Promise<unknown> | undefined;
    getPreData(data: Params): Promise<{
        tn: string;
        clientId?: undefined;
        maskPhone?: undefined;
    } | {
        tn: string | undefined;
        clientId: string | undefined;
        maskPhone: string | undefined;
    }>;
    private checkSign;
    getAccessToken(data: any): Promise<void>;
    private collectLikeError;
}
export default ChinaTelcom;
