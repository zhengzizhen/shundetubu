"use strict";
exports.__esModule = true;
function getElementXPath(el, context) {
    if (context === void 0) { context = document.body; }
    var xpath = '';
    while (el !== null) {
        if (el.id !== '') {
            xpath = "//*[@id=\"" + el.id + "\"]" + xpath;
            break;
        }
        if (el === context) {
            xpath = "/" + el.tagName.toLowerCase() + xpath;
            if (document.body === context) {
                xpath = "/html" + xpath;
            }
            break;
        }
        var siblings = el.parentNode ? el.parentNode.childNodes : [];
        var sameNodeCount = 1;
        var ix = 1;
        var i = 0;
        for (var l = siblings.length; i < l; i++) {
            var sibling = siblings[i];
            if (sibling === el) {
                ix = sameNodeCount;
            }
            else if (sibling.nodeType === 1 && sibling.tagName === el.tagName) {
                sameNodeCount++;
            }
        }
        xpath = "/" + el.tagName.toLowerCase() + (sameNodeCount > 1 ? "[" + ix + "]" : '') + xpath;
        el = el.parentNode;
    }
    return xpath;
}
exports.getElementXPath = getElementXPath;
/**
 * 计算点击事件触发的 dom 在组件维度的 path
 * 最终得到如：/Root/App/Layout/ASpin/Dashboard
 * @param el Element
 */
function getElementVPath(el) {
    var vpath = '';
    while (el != null && el.__vue__ == null) {
        el = el.parentNode;
    }
    if (el) {
        var vm = el.__vue__;
        while (vm !== null && vm !== undefined) {
            // 匿名组件命名为 Anonymous
            var parent_1 = vm.$parent;
            var name_1 = vm.$options.name || (parent_1 && parent_1.$parent ? 'Anonymous' : 'Root');
            var children = parent_1 ? parent_1.$children || [] : [];
            var ix = 1;
            var sameNodeCount = 1;
            for (var i = 0; i < children.length; i++) {
                if (vm === children[i]) {
                    ix = sameNodeCount;
                }
                else if (children[i].constructor === vm.constructor) {
                    sameNodeCount++;
                }
            }
            vpath = "/" + name_1 + (sameNodeCount > 1 ? "[" + ix + "]" : '') + vpath;
            vm = parent_1;
        }
    }
    return vpath;
}
exports.getElementVPath = getElementVPath;
//# sourceMappingURL=utils.js.map