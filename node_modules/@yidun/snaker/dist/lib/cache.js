"use strict";
exports.__esModule = true;
var userStore_1 = require("./userStore");
var localStore;
try {
    localStore = localStorage || userStore_1["default"];
}
catch (err) {
    localStore = userStore_1["default"];
}
var History = /** @class */ (function () {
    function History(name) {
        this.name = name;
    }
    History.prototype.push = function (log) {
        if (!log)
            return;
        try {
            var previous = localStore.getItem(this.name);
            localStore.setItem(this.name, previous ? previous + ',' + log : log);
        }
        catch (error) {
            console.log('localstorage or userData is disabled!');
        }
    };
    History.prototype.length = function () {
        try {
            var logs = localStore.getItem(this.name) || '';
            return logs ? logs.split(',').length : 0;
        }
        catch (error) {
            console.log('localstorage or userData is disabled!');
            return 0;
        }
    };
    History.prototype.pop = function (len) {
        if (len === void 0) { len = 1; }
        var poped;
        try {
            var value = localStore.getItem(this.name);
            var logs = value ? value.split(',') : [];
            poped = logs.splice(0, len);
            localStore.setItem(this.name, logs.join(','));
        }
        catch (error) {
            poped = [];
            console.log('localstorage or userData is disabled!');
        }
        return poped;
    };
    History.prototype.clear = function () {
        try {
            localStore.removeItem(this.name);
        }
        catch (error) {
            console.log('localstorage or userData is disabled!');
        }
    };
    return History;
}());
exports["default"] = History;
//# sourceMappingURL=cache.js.map